
一、 加减乘除，+ - * /（得商）  当数据类型不统一时，结果提升为数据范围大的那个类型
1. 加法三种用法
1.1 数值加法；
1.2 char类型按照ASCII或者Unicode码提升为int型，进行相加；
1.3 String类型，代表字符串连接操作，且任何数据类型与其相加都是字符串；
二、 取模 %（得余）
三、 自增自减 ++ --
1. num++
2. ++num
3. 单独使用 { num++; }，此时前++与后++无差别；
4. 混合使用 ，例如{ int num1 = num++; }，例如{ System.out.println(num++); }
4.1 { int num1 = ++num; }，num先加1，后进行使用【先加后用】

{ int num = 20; 
System.out.println(++num); // 21
System.out.println(++num); // 21}

4.2 { int num1 = num++; }，【先用后加】

{ int num = 20; 
System.out.println(num++); // 20
System.out.println(num++); // 21}

四、 赋值运算符
1. 复合运算符 +=，-=，*=，/=，%=
a += 1  ==> a = a+1;
………
五、 比较运算符的结果是一个布尔值
六、 逻辑运算符，&&，||，！
七、 三元运算符
{ 数据类型 变量名 = 判断条件 ？ 表达式1 ：表达式2；}
必须保证表达式1和表达式2都符合左侧数据类型的要求，否则报错；

